name: Deploy
on:
  workflow_dispatch: {}
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
      - run: npm ci
      - name: Build
        run: npm run docs:build
      - uses: actions/configure-pages@v2
      - uses: actions/upload-pages-artifact@v1
        with:
          path: docs/.vitepress/dist
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v1

      - name: publish gp-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          publish_dir: docs/.vitepress/dist
          publish_branch: gh-pages
          force_orphan: true








# name: Sync

# on:
#   push:
#     branches: [main]
#   workflow_dispatch:

# jobs:
  SyncToECS:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages  # 只检出 gh-pages 分支

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ECS_SSH_KEY }}

      - name: Add ECS host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.ECS_HOST }} >> ~/.ssh/known_hosts

      - name: Sync gh-pages branch to ECS
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./ root@${{ secrets.ECS_HOST }}:/var/www/html/docs/








# name: algolia
# on:
#   push:
#     branches:
#       - main
# jobs:
  algolia:
    runs-on: ubuntu-latest
    needs: SyncToECS
    steps:
      - uses: actions/checkout@v3
      - name: Get the content of algolia.json as config
        id: algolia_config
        run: echo "config=$(cat crawlerConfig.json | jq -r tostring)" >> $GITHUB_OUTPUT
      - name: Push indices to Algolia
        uses: signcl/docsearch-scraper-action@master
        env:
          APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
          API_KEY: ${{ secrets.API_KEY }}
          CONFIG: ${{ steps.algolia_config.outputs.config }}
